C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE XIONGCHENYU
OBJECT MODULE PLACED IN XiongChenYu.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE XiongChenYu.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1           // Include lib
   2          #include "reg52.h"
   3          #include <string.h>
   4          #include <intrins.h> 
   5          //Define Pin and Button
   6          
   7          #define RS                      P16
   8          #define RW                      P17             
   9          #define E                   P11
  10          #define BL                      P27
  11          #define BZ                      P26
  12          #define PB1                     P33
  13          #define PB2                     P10
  14          #define PB3                     P12     
  15          #define PB4                     P13
  16          #define PB5                     P14
  17          #define CL                  0x3a
  18          #define CM              0x2c
  19          #define DA                  0x2d
  20          #define uchar unsigned char 
  21          #define uint unsigned int 
  22          
  23          
  24          uint year_moon,month_moon,day_moon;
  25          
  26          unsigned char c_moon; 
  27          
  28          unsigned char code year_code[255] = { 
  29          0x04,0xBA,0x53, //2015 
  30          0x0A,0x5B,0x48, //2016 
  31          0x65,0x2B,0xBC, //2017 
  32          0x05,0x2B,0x50, //2018 
  33          0x0A,0x93,0x45, //2019 
  34          0x47,0x4A,0xB9, //2020 
  35          0x06,0xAA,0x4C, //2021 
  36          0x0A,0xd5,0x41, //2022 
  37          0x24,0xdA,0xB6, //2023 
  38          0x04,0xB6,0x4A, //2024 
  39          0x69,0x57,0x3d, //2025 
  40          0x0A,0x4e,0x51, //2026 
  41          0x0d,0x26,0x46, //2027 
  42          0x5e,0x93,0x3A, //2028 
  43          0x0d,0x53,0x4d, //2029 
  44          0x05,0xAA,0x43, //2030 
  45          0x36,0xB5,0x37, //2031 
  46          0x09,0x6d,0x4B, //2032 
  47          0xB4,0xAe,0xBf, //2033 
  48          0x04,0xAd,0x53, //2034 
  49          0x0A,0x4d,0x48, //2035 
  50          0x6d,0x25,0xBC, //2036 
  51          0x0d,0x25,0x4f, //2037 
  52          0x0d,0x52,0x44, //2038 
  53          0x5d,0xAA,0x38, //2039 
  54          0x0B,0x5A,0x4C, //2040 
  55          0x05,0x6d,0x41, //2041 
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 2   

  56          0x24,0xAd,0xB6, //2042 
  57          0x04,0x9B,0x4A, //2043 
  58          0x7A,0x4B,0xBe, //2044 
  59          0x0A,0x4B,0x51, //2045 
  60          0x0A,0xA5,0x46, //2046 
  61          0x5B,0x52,0xBA, //2047 
  62          0x06,0xd2,0x4e, //2048 
  63          0x0A,0xdA,0x42, //2049 
  64          0x35,0x5B,0x37, //2050 
  65          0x09,0x37,0x4B, //2051 
  66          0x84,0x97,0xC1, //2052 
  67          0x04,0x97,0x53, //2053 
  68          0x06,0x4B,0x48, //2054 
  69          0x66,0xA5,0x3C, //2055 
  70          0x0e,0xA5,0x4f, //2056 
  71          0x06,0xB2,0x44, //2057 
  72          0x4A,0xB6,0x38, //2058 
  73          0x0A,0xAe,0x4C, //2059 
  74          0x09,0x2e,0x42, //2060 
  75          0x3C,0x97,0x35, //2061 
  76          0x0C,0x96,0x49, //2062 
  77          0x7d,0x4A,0xBd, //2063 
  78          0x0d,0x4A,0x51, //2064 
  79          0x0d,0xA5,0x45, //2065 
  80          0x55,0xAA,0xBA, //2066 
  81          0x05,0x6A,0x4e, //2067 
  82          0x0A,0x6d,0x43, //2068 
  83          0x45,0x2e,0xB7, //2069 
  84          0x05,0x2d,0x4B, //2070 
  85          0x8A,0x95,0xBf, //2071 
  86          0x0A,0x95,0x53, //2072 
  87          0x0B,0x4A,0x47, //2073 
  88          0x6B,0x55,0x3B, //2074 
  89          0x0A,0xd5,0x4f, //2075 
  90          0x05,0x5A,0x45, //2076 
  91          0x4A,0x5d,0x38, //2077 
  92          0x0A,0x5B,0x4C, //2078 
  93          0x05,0x2B,0x42, //2079 
  94          0x3A,0x93,0xB6, //2080 
  95          0x06,0x93,0x49, //2081 
  96          0x77,0x29,0xBd, //2082 
  97          0x06,0xAA,0x51, //2083 
  98          0x0A,0xd5,0x46, //2084 
  99          0x54,0xdA,0xBA, //2085 
 100          0x04,0xB6,0x4e, //2086 
 101          0x0A,0x57,0x43, //2087 
 102          0x45,0x27,0x38, //2088 
 103          0x0d,0x26,0x4A, //2089 
 104          0x8e,0x93,0x3e, //2090 
 105          0x0d,0x52,0x52, //2091 
 106          0x0d,0xAA,0x47, //2092 
 107          0x66,0xB5,0x3B, //2093 
 108          0x05,0x6d,0x4f, //2094 
 109          0x04,0xAe,0x45, //2095 
 110          0x4A,0x4e,0xB9, //2096 
 111          0x0A,0x4d,0x4C, //2097 
 112          0x0d,0x15,0x41, //2098 
 113          0x2d,0x92,0xB5, //2099 
 114          
 115          }; 
 116          unsigned char code day_code1[9]={0x0,0x1f,0x3b,0x5a,0x78,0x97,0xb5,0xd4,0xf3}; 
 117          unsigned int code day_code2[3]={0x111,0x130,0x14e}; 
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 3   

 118          unsigned char date[]={"SunMonTueWedThuFriSat"};//setWeek
 119          unsigned char minset=0, hrset=0; //SetTime
 120          unsigned char lcdSetmin1=0, lcdSetmin2=0,lcdSethr1=0, lcdSethr2=0,lcdwhr1=0,lcdwhr2=0; //for Print SetTime
 121          unsigned char Setday=1,Setmonth=1; //SetDate
 122          unsigned char lcdSetday1=0, lcdSetday2=0,lcdSetmonth1=0, lcdSetmonth2=0; //for print SetDate
 123          unsigned char holiday=0 ,SetAlarmmin=0, SetAlarmhr=0;   //SetAlarm
 124          unsigned char lcdSetAlarmmin1, lcdSetAlarmmin2, lcdSetAlarmhr1, lcdSetAlarmhr2; //for print SetAlarm
 125          unsigned char bstopAlarm=0,bstopBL=0,bstopWatch=0,bstopSetTime,bstopTime=0,bstopSetDate=0;      //boolean
 126          unsigned char msec,sec,min,hr,whr,day=1,month=1,week=12,fyear=20,byear=15;      //for timer0 alarm
 127          unsigned char lcdmbyear1,lcdmbyear2; 
 128          unsigned char lcdfyear1,lcdfyear2,lcdbyear1,lcdbyear2,lcdmsec1,lcdsec1,lcdmin1,lcdhr1,lcdday1,lcdmonth1,lc
             -dmsec2,lcdsec2,lcdmin2,lcdhr2,lcdday2,lcdmonth2;      //for print timer0
 129          unsigned char wmsec,wsec,wmin; //for timer1 stopwatch
 130          unsigned char lcdwmsec1,lcdwsec1,lcdwmin1,lcdwmsec2,lcdwsec2,lcdwmin2;  //for print timer1
 131          unsigned char bexitSetTimeHelp = 0, bexitWatchHelp = 0, exitTimeHelp = 0, bexitSetDateHelp = 0, exitSetAla
             -rmHelp = 0, exitSetMenuHelp = 0, exitTimeHelp1=0;      //boolean
 132          unsigned char bstart=0,bclrWatchdisplay=0,alarmFlag=0,SnoozeFlag=0,bissextile=0;
 133          unsigned char code table[]={0x03,0x07,0x0f,0x1f,0x1f,0x1f,0x1f,0x1f,0x18,0x1E,0x1f,0x1f,0x1f,0x1f,0x1f,0x1
             -f,
 134          0x07,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x10,0x18,0x1c,0x1E,0x1E,0x1E,0x1E,0x1E,0x0f,0x07,0x03,0x01,0x00,0
             -x00,0x00,0x00,0x1f,0x1f,0x1f,0x1f,0x1f,0x0f,0x07,0x01, 
 135          0x1f,0x1f,0x1f,0x1f,0x1f,0x1c,0x18,0x00,0x1c,0x18,0x10,0x00,0x00,0x00,0x00,0x00};
 136          unsigned char utc3 = 0,utc1 = 0, utc2 = 0, utc = 8,tc=0;
 137          void Conversion( unsigned char year,unsigned char month,unsigned char  day)      ;
 138          //----- Delay Subroutine -------
 139          void delay( unsigned long duration)
 140          {
 141   1              while ( ( duration -- )!= 0);
 142   1      }
 143          //--------- Strobe Signal for LCD -----
 144          void strobe()
 145          {
 146   1              E = 1;
 147   1              delay( 50 );
 148   1              E = 0;
 149   1              delay( 50 );
 150   1      }
 151          //----- LCD initialisation -----
 152          void LCD_init()
 153          {
 154   1              unsigned char x;                
 155   1              for ( x = 0 ; x < 3 ; x ++){
 156   2                      P0 = 0x30;
 157   2                      RS = 0;
 158   2                      RW = 0;
 159   2                      strobe();
 160   2                      delay( 750 );
 161   2              }       
 162   1              P0 = 0x38;
 163   1              strobe();
 164   1              P0 = 0x0c;
 165   1              strobe();
 166   1              P0 = 0x01;
 167   1              strobe();
 168   1              P0 = 0x02;
 169   1              strobe();
 170   1      }
 171          //----- LCD Character Print routine --------
 172          void LCD_Print( unsigned char x)
 173          {
 174   1              P0 = x;
 175   1              RS = 1;
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 4   

 176   1              strobe();
 177   1      }
 178          //----- LCD Command ----------
 179          void LCD_Command( unsigned char x)
 180          {
 181   1              P0 = x;
 182   1              RS = 0;
 183   1              strobe();
 184   1      }
 185          //------ LCD Line Print ---------
 186          void LCD_Print_Line( printData )
 187          unsigned char *printData;
 188          {
 189   1              unsigned char x;
 190   1              for( x = 0 ; x < strlen( printData ); x++)
 191   1                      LCD_Print( printData[ x ] );    
 192   1      }
 193          void LCD_Print_Week()
 194          {
 195   1               LCD_Print(date[week]);
 196   1               LCD_Print(date[week+1]);
 197   1           LCD_Print(date[week+2]);
 198   1      }
 199          void BackLight()
 200          {
 201   1              
 202   1              BL=~BL;
 203   1              
 204   1      }
 205          void firstcheckholiday()
 206          {
 207   1              if(month==1&&day==1||month==5&&day==1||month==8&&day==9||
 208   1                 month==12&&day==25||month==2&&day==19&&fyear==20&&byear==15||
 209   1                      month==2&&day==20&&fyear==20&&byear==15||
 210   1                              month==2&&day==8 &&fyear==20&&byear==16||
 211   1                      month==2&&day==9 &&fyear==20&&byear==16||
 212   1                              month==1&&day==28&&fyear==20&&byear==17||
 213   1                      month==1&&day==29&&fyear==20&&byear==17||
 214   1                              month==2&&day==16&&fyear==20&&byear==18||
 215   1                      month==2&&day==17&&fyear==20&&byear==18||
 216   1                              month==2&&day==5 &&fyear==20&&byear==19||
 217   1                      month==2&&day==6 &&fyear==20&&byear==19||
 218   1                              month==1&&day==25&&fyear==20&&byear==20||
 219   1                      month==1&&day==26&&fyear==20&&byear==20||
 220   1                              month==2&&day==12&&fyear==20&&byear==21||
 221   1                      month==2&&day==13&&fyear==20&&byear==21||
 222   1                              month==2&&day==1 &&fyear==20&&byear==22||
 223   1                      month==2&&day==2 &&fyear==20&&byear==22||
 224   1                              month==1&&day==22&&fyear==20&&byear==23||
 225   1                      month==1&&day==23&&fyear==20&&byear==23||
 226   1                              month==2&&day==10&&fyear==20&&byear==24||
 227   1                      month==2&&day==11&&fyear==20&&byear==24||
 228   1                              month==4&&day==3 &&fyear==20&&byear==15||
 229   1                              month==6&&day==1 &&fyear==20&&byear==15||
 230   1                              month==7&&day==17&&fyear==20&&byear==15||
 231   1                              month==9&&day==24&&fyear==20&&byear==15||
 232   1                              month==11&&day==10&&fyear==20&&byear==15)
 233   1              {
 234   2                   holiday=1;
 235   2              }
 236   1              else holiday=0;
 237   1      }
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 5   

 238          void timer0 (void) interrupt 1                                   //clock
 239          {
 240   1              TF0=0;
 241   1              TH0=0XB1;
 242   1              TL0=0XE0;                                                                        //10ms
 243   1              msec++;
 244   1              if(msec==100)
 245   1              {
 246   2                      sec++;
 247   2                      msec=0;
 248   2                      if (sec == 60)
 249   2                      {
 250   3                              min++;
 251   3                  sec = 0;
 252   3                      } 
 253   2                      if (min == 60)
 254   2                  {
 255   3                              hr++;
 256   3                              min =0;
 257   3                  }
 258   2                  if (hr == 24 )
 259   2                  {
 260   3                              hr=0;
 261   3                              day++;
 262   3                              week+=3;
 263   3                  }
 264   2                      if(week==23)
 265   2                      {
 266   3                          week=0;
 267   3                      }
 268   2                      if(day==32)
 269   2                      {
 270   3                          day=1;
 271   3                          month++;
 272   3                      }
 273   2                      if(month==13)
 274   2                      {
 275   3                          sec = 0;                                    
 276   3                              min = 0;
 277   3                              hr=0;
 278   3                              day=1;
 279   3                              month=1;
 280   3                              byear++;
 281   3                      }
 282   2                      if(byear==99) fyear++;
 283   2              }
 284   1              lcdsec1 = (sec/10) | 0x30;
 285   1              lcdsec2 = (sec%10) | 0x30;
 286   1              lcdmin1 = (min/10) | 0x30;
 287   1              lcdmin2 = (min%10) | 0x30;
 288   1              lcdhr1 = (hr/10) | 0x30;
 289   1              lcdhr2 = (hr%10) | 0x30;
 290   1              lcdday1 = (day/10) | 0x30;
 291   1              lcdday2 = (day%10) | 0x30;
 292   1              lcdmonth1 = (month/10) | 0x30;
 293   1              lcdmonth2 = (month%10) | 0x30;
 294   1              lcdfyear1=(fyear/10) | 0x30;
 295   1              lcdfyear2=(fyear%10) | 0x30;
 296   1              lcdbyear1=(byear/10) | 0x30;
 297   1              lcdbyear2=(byear%10) | 0x30;
 298   1      }
 299          void timer1 (void) interrupt 3
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 6   

 300          {
 301   1              TF1=0;
 302   1              TH1=0XB1;
 303   1              TL1=0XE0;
 304   1              wmsec++;
 305   1              if(wmsec==100)
 306   1              {
 307   2                      wsec++;
 308   2                      wmsec=0;
 309   2                      if (wsec == 60)
 310   2                      {
 311   3                              wmin++;
 312   3                  wsec = 0;
 313   3                      } 
 314   2                      if (wmin == 60)
 315   2                  {
 316   3                              wmin =0;
 317   3                  }
 318   2              }
 319   1              lcdwmsec1 = (wmsec/10) | 0x30;
 320   1              lcdwmsec2 = (wmsec%10) | 0x30;
 321   1              lcdwsec1 = (wsec/10) | 0x30;
 322   1              lcdwsec2 = (wsec%10) | 0x30;
 323   1              lcdwmin1 = (wmin/10) | 0x30;
 324   1              lcdwmin2 = (wmin%10) | 0x30;
 325   1      }
 326          void LCD_PrintDate()
 327          {
 328   1        LCD_Print_Week();
 329   1        LCD_Print(CM);
 330   1        LCD_Print(lcdmonth1);
 331   1        LCD_Print(lcdmonth2);
 332   1        LCD_Print(DA);
 333   1        LCD_Print(lcdday1);
 334   1        LCD_Print(lcdday2);
 335   1        LCD_Print(DA);
 336   1        LCD_Print(lcdfyear1);
 337   1        LCD_Print(lcdfyear2);
 338   1        LCD_Print(lcdbyear1);
 339   1        LCD_Print(lcdbyear2);
 340   1          LCD_Print(CM);
 341   1        if(holiday==1)
 342   1        {
 343   2            LCD_Print('H');
 344   2        }
 345   1        else LCD_Print(' ');
 346   1      }
 347           void LCD_PrintTimeSet()
 348          {
 349   1          lcdSethr1 = (hrset/10) | 0x30;
 350   1              lcdSethr2 = (hrset%10) | 0x30;
 351   1              lcdSetmin1 = (minset/10) | 0x30;
 352   1              lcdSetmin2 = (minset%10) | 0x30;
 353   1              
 354   1          LCD_Print(lcdSethr1);
 355   1          LCD_Print(lcdSethr2);
 356   1          LCD_Print(CL);
 357   1          LCD_Print(lcdSetmin1);
 358   1          LCD_Print(lcdSetmin2);
 359   1      }
 360          void LCD_PrintDateSet()
 361          {
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 7   

 362   1              lcdSetday1 = (Setday/10) | 0x30;
 363   1              lcdSetday2 = (Setday%10) | 0x30;
 364   1              lcdSetmonth1 = (Setmonth/10) | 0x30;
 365   1              lcdSetmonth2 = (Setmonth%10) | 0x30;
 366   1              lcdfyear1=(fyear/10) | 0x30;
 367   1              lcdfyear2=(fyear%10) | 0x30;
 368   1              lcdbyear1=(byear/10) | 0x30;
 369   1              lcdbyear2=(byear%10) | 0x30;
 370   1      
 371   1          LCD_Print_Week();
 372   1          LCD_Print(CM);
 373   1          LCD_Print(lcdSetmonth1);
 374   1          LCD_Print(lcdSetmonth2);
 375   1          LCD_Print(DA);
 376   1          LCD_Print(lcdSetday1);
 377   1          LCD_Print(lcdSetday2);
 378   1              LCD_Print(DA);
 379   1              LCD_Print(lcdfyear1);
 380   1          LCD_Print(lcdfyear2);
 381   1              LCD_Print(lcdbyear1);
 382   1          LCD_Print(lcdbyear2);
 383   1      }
 384          
 385          void LCD_PrintLunar()
 386          {
 387   1         
 388   1              lcdSetday1 = (day_moon/10) | 0x30;
 389   1              lcdSetday2 = (day_moon%10) | 0x30;
 390   1              lcdSetmonth1 = (month_moon/10) | 0x30;
 391   1              lcdSetmonth2 = (month_moon%10) | 0x30;
 392   1              lcdmbyear1=(year_moon/10) | 0x30;
 393   1              lcdmbyear2=(year_moon%10) | 0x30;
 394   1      
 395   1          LCD_Print(lcdSetmonth1);
 396   1          LCD_Print(lcdSetmonth2);
 397   1          LCD_Print(DA);
 398   1          LCD_Print(lcdSetday1);
 399   1          LCD_Print(lcdSetday2);              
 400   1              LCD_Print(DA);
 401   1              LCD_Print(lcdfyear1);
 402   1          LCD_Print(lcdfyear2);
 403   1              LCD_Print(lcdmbyear1);
 404   1          LCD_Print(lcdmbyear2);
 405   1      }
 406          void LCD_PrintAlarm()
 407          {
 408   1              lcdSetAlarmmin1 = (SetAlarmmin/10) | 0x30;
 409   1              lcdSetAlarmmin2 = (SetAlarmmin%10) | 0x30;
 410   1              lcdSetAlarmhr1 = (SetAlarmhr/10) | 0x30;
 411   1              lcdSetAlarmhr2 = (SetAlarmhr%10) | 0x30;
 412   1      
 413   1              LCD_Print(lcdSetAlarmhr1);
 414   1          LCD_Print(lcdSetAlarmhr2);
 415   1          LCD_Print(CL);
 416   1              LCD_Print(lcdSetAlarmmin1);
 417   1              LCD_Print(lcdSetAlarmmin2);     
 418   1      }
 419          
 420          void DIDIDI()
 421          {
 422   1         BZ = 1;
 423   1         delay(1000);
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 8   

 424   1         BZ = 0;
 425   1         delay(1000);
 426   1      }
 427          void FlashLight()
 428          {
 429   1         BL = 1;
 430   1         delay(1000);
 431   1         BL = 0;
 432   1         delay(1000);
 433   1      }
 434          void alarmCheck()
 435          {       if(hr == 7&&min == 0)
 436   1      {
 437   2       BL = 1;
 438   2      }
 439   1      if(hr==19&&min == 0)
 440   1      {
 441   2       BL = 0;
 442   2      }
 443   1              if (hr == SetAlarmhr && min == SetAlarmmin && alarmFlag == 1)
 444   1              {
 445   2                      LCD_Command(0x01);
 446   2                      for (;;)
 447   2                      {
 448   3                              LCD_Command(0x80);
 449   3                              LCD_Print_Line("Button 3 to SNOOZE");
 450   3                              //add
 451   3                              DIDIDI();
 452   3                              FlashLight();
 453   3                              //
 454   3                              LCD_Command(0xC0);
 455   3                              LCD_Print_Line("Button 4 to cancel");
 456   3                              if (PB3 == 0)
 457   3                              {
 458   4                                      SnoozeFlag = 1;
 459   4                                      SetAlarmmin = min;
 460   4                                      SetAlarmmin += 1;
 461   4                                      break;
 462   4                              }
 463   3                              if (PB4 == 0)
 464   3                              {
 465   4                                      alarmFlag = 0;
 466   4                                      SetAlarmhr = 0;
 467   4                                      SetAlarmmin =0;
 468   4                                      SnoozeFlag = 0;
 469   4                                      break;
 470   4                              }
 471   3                      }
 472   2                      LCD_Command(0x01);
 473   2                      BZ = 0;
 474   2                      BL = 0;
 475   2              }
 476   1      }
 477          void setDate()
 478          {
 479   1              LCD_Command(0x01);
 480   1              for(;;)
 481   1              {
 482   2                      alarmCheck();
 483   2      
 484   2                       if(PB1==0)
 485   2                      { 
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 9   

 486   3                              Setmonth++;
 487   3                              if(Setmonth>12)Setmonth=1;
 488   3                              if(Setmonth==1 || Setmonth==3 || Setmonth==5 || Setmonth==7 || Setmonth==8 || Setmonth==10 || Setmonth=
             -=12  )
 489   3                              {               week+=9;
 490   4                              if(week>20) week=0; 
 491   4                                      delay(9000);
 492   4                              }
 493   3                              else if(Setmonth ==2)
 494   3                              {
 495   4                                  if(bissextile==1)
 496   4                                      {               week+=3;
 497   5                              if(week>20) week=0; 
 498   5                                          delay(9000);
 499   5                                      }
 500   4                                      else
 501   4                                      {               week+=0;
 502   5                              if(week>20) week=0; 
 503   5                                          delay(9000);
 504   5                                      }
 505   4                              }
 506   3                              else if(Setmonth==4 || Setmonth==9 || Setmonth==6 || Setmonth==11 )
 507   3                              {
 508   4                              week+=6;
 509   4                              if(week>20) week=0; 
 510   4                                      delay(9000);
 511   4                              } 
 512   3                  delay(9000);
 513   3                      }
 514   2      
 515   2                      else if(PB2==0)
 516   2                      {       
 517   3                          week+=3;
 518   3                              if(week>20) week=0; 
 519   3                              if(Setmonth==1 || Setmonth==3 || Setmonth==5 || Setmonth==7 || Setmonth==8 || Setmonth==10 || Setmonth=
             -=12  )
 520   3                              {
 521   4                                      Setday++;
 522   4                                      if(Setday>31) Setday=1;
 523   4                                      delay(9000);
 524   4                              }
 525   3                              else if(Setmonth ==2)
 526   3                              {
 527   4                                  if(bissextile==1)
 528   4                                      { 
 529   5                                          Setday++;
 530   5                                          if(Setday>29) Setday=1;
 531   5                                          delay(9000);
 532   5                                      }
 533   4                                      else
 534   4                                      {
 535   5                                              Setday++;
 536   5                                          if(Setday>28) Setday=1;
 537   5                                          delay(9000);
 538   5                                      }
 539   4                              }
 540   3                              else if(Setmonth==4 || Setmonth==9 || Setmonth==6 || Setmonth==11 )
 541   3                              {
 542   4                                      Setday++;
 543   4                                      if(Setday>30) Setday=1;
 544   4                                      delay(9000);
 545   4                              } 
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 10  

 546   3                              else{}
 547   3                      }
 548   2                      
 549   2      else if(PB3==0)
 550   2       { 
 551   3       if(week==0) 
 552   3       {
 553   4         week=18;
 554   4       }
 555   3        else
 556   3       {
 557   4       week-=3;
 558   4       }
 559   3      
 560   3      
 561   3      
 562   3      
 563   3      if(Setmonth==1 || Setmonth==3 || Setmonth==5 || Setmonth==7 || Setmonth==8 || Setmonth==10 || Setmonth==12
             - )
 564   3       {
 565   4       Setday--;
 566   4       if(Setday<1) Setday=31;
 567   4       delay(9000);
 568   4       }
 569   3       else if(Setmonth ==2)
 570   3       {
 571   4       if(bissextile==1)
 572   4       { 
 573   5       Setday--;
 574   5      
 575   5      if(Setday<1) Setday=29;
 576   5      
 577   5      delay(9000);
 578   5       }
 579   4       else
 580   4       {
 581   5       Setday--;
 582   5      
 583   5      if(Setday<1) Setday=28;
 584   5      
 585   5      delay(9000);
 586   5       }
 587   4       }
 588   3       else if(Setmonth==4 || Setmonth==6 || Setmonth==9 || Setmonth==11 )
 589   3       {
 590   4       Setday--;
 591   4       if(Setday<1) Setday=30;
 592   4       delay(9000);
 593   4       }
 594   3       }
 595   2      
 596   2                      else if(PB4==0)
 597   2                      {
 598   3                            byear++;
 599   3                                if(byear==100) 
 600   3                                {
 601   4                                   fyear++;
 602   4                                       byear=0;
 603   4                                }
 604   3      
 605   3                                if((fyear%4*100+byear)%4==0)
 606   3                                {
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 11  

 607   4                                 week+=3;
 608   4                              if(week>20) 
 609   4                                week=0; 
 610   4                                bissextile=1;
 611   4                                }
 612   3                                else
 613   3                                {
 614   4                                         week+=6;
 615   4                              if(week>20) 
 616   4                                week=0; 
 617   4                                bissextile=0;
 618   4                                }
 619   3                                delay(9000);
 620   3                      }
 621   2                      else if(PB5==0)
 622   2                      {               
 623   3                          LCD_Command(0x01);
 624   3                              delay(9000);
 625   3                              break;
 626   3                      }
 627   2                      LCD_Command(0x80);
 628   2                      LCD_Print_Line("SET DATE:");
 629   2                      LCD_Command(0xC0);
 630   2                      LCD_PrintDateSet();
 631   2                      day=Setday;
 632   2                      month=Setmonth; 
 633   2              }
 634   1      }
 635          
 636          void setTime()
 637          {
 638   1              LCD_Command(0x01);
 639   1              for(;;)
 640   1              {
 641   2                      alarmCheck();
 642   2                      if(PB1==0)
 643   2                      {
 644   3                              hrset++;
 645   3                              if(hrset>23) hrset=0; 
 646   3                              delay(9000);
 647   3                      }
 648   2                      else if(PB2==0)
 649   2                      {
 650   3                              minset++; 
 651   3                              if(minset>59) minset=0;
 652   3                              delay(9000);
 653   3                      }
 654   2                      else if(PB3==0)
 655   2                      {
 656   3                              if(minset<1) minset=60;
 657   3                              minset--;
 658   3                              delay(9000);
 659   3                      }
 660   2                       
 661   2                      else if(PB5==0) 
 662   2                      {
 663   3                          LCD_Command(0x01);
 664   3                              delay(9000);
 665   3                              break;
 666   3                      }       
 667   2                      LCD_Command(0x80);
 668   2                      LCD_Print_Line("SET TIME:");
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 12  

 669   2                      LCD_Command(0xC0);
 670   2                      LCD_PrintTimeSet();
 671   2                      if(minset!=0||hrset!=0)
 672   2                      {       
 673   3                              hr=hrset;
 674   3                              min=minset;
 675   3                      }
 676   2              }
 677   1      }
 678          void clrWatch()
 679          {
 680   1              wmsec=0;
 681   1              wsec=0;
 682   1              wmin=0;
 683   1      }
 684          
 685          void LCD_PrintTime()
 686          {
 687   1              LCD_Print(lcdhr1);
 688   1          LCD_Print(lcdhr2);
 689   1          LCD_Print(CL);
 690   1          LCD_Print(lcdmin1);
 691   1          LCD_Print(lcdmin2);
 692   1          LCD_Print(CL);
 693   1          LCD_Print(lcdsec1);
 694   1          LCD_Print(lcdsec2);
 695   1      }
 696          
 697          void LCD_PrintWatch()
 698          {
 699   1              LCD_Print(lcdwmin1);
 700   1          LCD_Print(lcdwmin2);
 701   1          LCD_Print(CL);
 702   1          LCD_Print(lcdwsec1);
 703   1          LCD_Print(lcdwsec2);
 704   1              LCD_Print(CL);
 705   1          LCD_Print(lcdwmsec1);
 706   1          LCD_Print(lcdwmsec2);
 707   1      }
 708          void Runtimer1()
 709          {
 710   1              for(;;)
 711   1              {
 712   2                      alarmCheck();
 713   2                      if((bclrWatchdisplay==1)&&(TR1==0))
 714   2                      {
 715   3                              LCD_Command(0x80);
 716   3                              LCD_Print_Line("StopWatch:");
 717   3                              LCD_Command(0xc4);
 718   3                              LCD_Print_Line("00:00:00");
 719   3                      }
 720   2                      else
 721   2                      {
 722   3                              LCD_Command(0x80);
 723   3                              LCD_Print_Line("StopWatch:");
 724   3                              LCD_Command(0xc4);
 725   3                              LCD_PrintWatch();
 726   3                      }
 727   2                      if((PB1==0)&&(bstopWatch==0))
 728   2                      {
 729   3                              bstopWatch=1;
 730   3                      }
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 13  

 731   2                      if((PB1==1)&&(bstopWatch==1))
 732   2                      {
 733   3                              bstopWatch=2;
 734   3                      }                                       
 735   2                      if((PB1==0)&&(bstopWatch==2))
 736   2                      {
 737   3                              bstopWatch=0;
 738   3                              bclrWatchdisplay=0;
 739   3                              TR1=~TR1;
 740   3                      }
 741   2                      if(PB2==0)
 742   2                      {
 743   3                              bclrWatchdisplay=1;
 744   3                              clrWatch();             
 745   3                      }
 746   2              
 747   2                      if(PB5==0)
 748   2                      {       delay(9000);
 749   3                              break;
 750   3                      }
 751   2              }
 752   1      }
 753          void StopWatch()
 754          {
 755   1              if(bstart==0)
 756   1              {
 757   2                      LCD_Command(0x01);
 758   2                      LCD_Command(0x80);
 759   2                      LCD_Print_Line("StopWatch:");
 760   2                      LCD_Command(0xc4);
 761   2                      LCD_Print_Line("00:00:00");
 762   2              }
 763   1              else
 764   1              {
 765   2                      LCD_Command(0x01);
 766   2                      LCD_Command(0x80);
 767   2                      LCD_Print_Line("StopWatch:");
 768   2                      LCD_Command(0xc4);
 769   2                      LCD_PrintWatch();
 770   2              }
 771   1              for(;;)
 772   1              {
 773   2                      alarmCheck();
 774   2                      if(bstart==1)
 775   2                      {
 776   3                               Runtimer1();
 777   3                      }
 778   2                      while(PB1==0)
 779   2                      {
 780   3                              bstart=1;
 781   3                              LCD_Command(0x01);
 782   3                              TR1 = 1;
 783   3                              Runtimer1();
 784   3                      }
 785   2                      if (PB5 == 0)
 786   2                      {
 787   3                              Runtimer1();
 788   3                      }
 789   2      
 790   2                      if(PB5==0)
 791   2                      {
 792   3                              break;
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 14  

 793   3                      }
 794   2              }
 795   1      }
 796          void lunar()
 797          { 
 798   1      
 799   1      LCD_Command( 0x01 );
 800   1           
 801   1              for(;;)
 802   1              {
 803   2                      alarmCheck();
 804   2                      LCD_Command(0x80);
 805   2                      LCD_Print_Line("Lunar: ");
 806   2                 LCD_PrintLunar();
 807   2                 LCD_Command(0xc0);
 808   2                      if(month==1&&day==1)
 809   2                      {
 810   3                              holiday=1;
 811   3                          LCD_Print_Line("New Year Day");
 812   3                          }
 813   2                      else if(month==5&&day==1)
 814   2                      {
 815   3                          holiday=1;
 816   3                          LCD_Print_Line("Labour Day");
 817   3                          }
 818   2                  else if(month==8&&day==9)
 819   2                     {
 820   3                          holiday=1;
 821   3                              LCD_Print_Line("National Day");
 822   3                      }                                                                                                  
 823   2                  else if(month==12&&day==25)
 824   2                      {
 825   3                          holiday=1;
 826   3                          LCD_Print_Line("Christmas Day");
 827   3                          }
 828   2                      else if(month==2&&day==19&&fyear==20&&byear==15||
 829   2                             month==2&&day==20&&fyear==20&&byear==15||
 830   2                                     month==2&&day==8 &&fyear==20&&byear==16||
 831   2                             month==2&&day==9 &&fyear==20&&byear==16||
 832   2                                     month==1&&day==28&&fyear==20&&byear==17||
 833   2                             month==1&&day==29&&fyear==20&&byear==17||
 834   2                                     month==2&&day==16&&fyear==20&&byear==18||
 835   2                             month==2&&day==17&&fyear==20&&byear==18||
 836   2                                     month==2&&day==5 &&fyear==20&&byear==19||
 837   2                             month==2&&day==6 &&fyear==20&&byear==19||
 838   2                                     month==1&&day==25&&fyear==20&&byear==20||
 839   2                             month==1&&day==26&&fyear==20&&byear==20||
 840   2                                     month==2&&day==12&&fyear==20&&byear==21||
 841   2                             month==2&&day==13&&fyear==20&&byear==21||
 842   2                                     month==2&&day==1 &&fyear==20&&byear==22||
 843   2                             month==2&&day==2 &&fyear==20&&byear==22||
 844   2                                     month==1&&day==22&&fyear==20&&byear==23||
 845   2                             month==1&&day==23&&fyear==20&&byear==23||
 846   2                                     month==2&&day==10&&fyear==20&&byear==24||
 847   2                             month==2&&day==11&&fyear==20&&byear==24)
 848   2                     {
 849   3                          holiday=1;
 850   3                          LCD_Print_Line("Chinese New Year");
 851   3                         }
 852   2                     else if(month==4&&day==3 &&fyear==20&&byear==15)
 853   2                     {
 854   3                          holiday=1;
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 15  

 855   3                          LCD_Print_Line("Good Friday");
 856   3                      }
 857   2                      else if(month==6&&day==1 &&fyear==20&&byear==15)
 858   2                      {
 859   3                          holiday=1;
 860   3                          LCD_Print_Line("Vesak Day");
 861   3                      }
 862   2                      else if(month==7&&day==17 &&fyear==20&&byear==15)
 863   2                      {
 864   3                          holiday=1;
 865   3                          LCD_Print_Line("Hari Raya");
 866   3                      }
 867   2                      else if(month==9&&day==24 &&fyear==20&&byear==15)
 868   2                      {
 869   3                          holiday=1;
 870   3                              LCD_Print_Line("Hari Raya Haji");
 871   3                          }
 872   2                          else if(month==11&&day==10 &&fyear==20&&byear==15)
 873   2                      {
 874   3                          holiday=1;
 875   3                          LCD_Print_Line("Deepavali");
 876   3                           }
 877   2      
 878   2                   else 
 879   2                               {
 880   3                                  holiday=0;
 881   3                               }
 882   2                      if(PB5==0)
 883   2                      {  delay(9000);
 884   3                              break;
 885   3                      }
 886   2              }
 887   1      
 888   1      }
 889          void worldtime()
 890          {
 891   1              LCD_Command(0x01);
 892   1              for(;;)
 893   1              {
 894   2               LCD_Command(0x80);
 895   2              LCD_Print_Line("UTC");
 896   2              if(utc <= 12)
 897   2              {
 898   3              LCD_Print_Line("+");
 899   3              utc1 = (utc/10) | 0x30;
 900   3              utc2 = (utc%10) | 0x30;
 901   3          }
 902   2      
 903   2          else
 904   2      
 905   2      {
 906   3              LCD_Print_Line("-");
 907   3              utc3 = 25- utc;
 908   3              utc1 = (utc3/10) | 0x30;
 909   3              utc2 = (utc3%10) | 0x30;        
 910   3      }
 911   2                 LCD_Print(utc1);
 912   2                LCD_Print(utc2);      
 913   2              LCD_Print_Line(":00");
 914   2                LCD_Command(0xc0);    
 915   2              lcdwhr1 = (whr/10) | 0x30;
 916   2              lcdwhr2 = (whr%10) | 0x30;
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 16  

 917   2              LCD_Print(lcdwhr1);
 918   2          LCD_Print(lcdwhr2);
 919   2          LCD_Print(CL);
 920   2          LCD_Print(lcdmin1);
 921   2          LCD_Print(lcdmin2);
 922   2          LCD_Print(CL);
 923   2          LCD_Print(lcdsec1);
 924   2          LCD_Print(lcdsec2);
 925   2                      if(PB1==0)
 926   2                      {
 927   3                              if (utc==24)
 928   3                              {       utc=1;
 929   4                              
 930   4                              }
 931   3                              else
 932   3                              {
 933   4                                                      
 934   4                                      utc++;
 935   4                                      
 936   4                              }
 937   3                              whr = hr;
 938   3              if(utc<=8)
 939   3              {
 940   4                      tc = 8-utc;
 941   4                      for(tc;tc>0;tc--)
 942   4                      {
 943   5                              if (whr==0)
 944   5                              {
 945   6                                      whr=23;
 946   6                                      
 947   6                              }else
 948   5                                      {
 949   6                              whr -= 1; 
 950   6                                      }
 951   5                      }
 952   4                              
 953   4                      
 954   4                      
 955   4              }
 956   3              else
 957   3              {
 958   4                      tc = utc-8;
 959   4              for(tc;tc>0;tc--)
 960   4                      {
 961   5                              if (whr>=23)
 962   5                              {
 963   6                                      whr=0;
 964   6                                      
 965   6                              }else
 966   5                                      {
 967   6                              whr += 1; 
 968   6                                      }
 969   5                      }
 970   4                      
 971   4              }               
 972   3                              delay(9000);
 973   3                      }
 974   2                      else if(PB2==0)
 975   2                      {
 976   3                              if(utc==1)
 977   3                              {
 978   4                                      utc = 24;
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 17  

 979   4                                      
 980   4                              }else{
 981   4                              utc--; }
 982   3                              whr = hr;
 983   3              if(utc<=8)
 984   3              {
 985   4                      tc = 8-utc;
 986   4                      for(tc;tc>0;tc--)
 987   4                      {
 988   5                              if (whr==0)
 989   5                              {
 990   6                                      whr=23;
 991   6                                      
 992   6                              }else
 993   5                                      {
 994   6                              whr -= 1; 
 995   6                                      }
 996   5                      }
 997   4                              
 998   4                      
 999   4                      
1000   4              }
1001   3              else
1002   3              {
1003   4                      tc = utc-8;
1004   4              for(tc;tc>0;tc--)
1005   4                      {
1006   5                              if (whr>=23)
1007   5                              {
1008   6                                      whr=0;
1009   6                                      
1010   6                              }else
1011   5                                      {
1012   6                              whr += 1; 
1013   6                                      }
1014   5                      }
1015   4                      
1016   4              }               
1017   3                              delay(9000);
1018   3                      }
1019   2                      else if(PB5==0) 
1020   2                      {
1021   3                              delay(9000);
1022   3                              break;
1023   3                      }       
1024   2      
1025   2              }
1026   1      }
1027                  
1028                  
1029          
1030          void Time()
1031          {
1032   1              LCD_Command( 0x01 );
1033   1              for(;;)
1034   1              {
1035   2                      alarmCheck();
1036   2                      firstcheckholiday();
1037   2                      LCD_Command(0x80);
1038   2                      LCD_PrintDate();
1039   2                      LCD_Command(0xc1);
1040   2                      LCD_Print_Line("Time: ");
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 18  

1041   2                      LCD_PrintTime();
1042   2                      if(PB1==0)
1043   2                      {
1044   3                              bstopSetTime=1;
1045   3                      }
1046   2                      if((PB1==1)&&(bstopSetTime==1))    
1047   2                      {
1048   3                              setTime();
1049   3                              bstopSetTime=0;
1050   3                      }
1051   2                      if(PB2==0)
1052   2                      {
1053   3                              bstopSetDate=1;
1054   3                      }
1055   2                      if((PB2==1)&&(bstopSetDate==1))
1056   2                      {
1057   3                              setDate();
1058   3                              bstopSetDate=0;
1059   3                      }       
1060   2                    if(PB3==0)
1061   2                      {       Conversion(byear,month,day);
1062   3              
1063   3                                      
1064   3                              lunar();
1065   3                      }             
1066   2                      if(PB4==0)
1067   2                      {       
1068   3              worldtime();
1069   3                      }
1070   2      
1071   2                      if(PB5==0)
1072   2                      {        delay(9000);
1073   3                              break;
1074   3                      }
1075   2              }
1076   1      }
1077          
1078          
1079          
1080          
1081          void setAlarm()
1082          {
1083   1              LCD_Command(0x01);      
1084   1              for(;;)
1085   1              {
1086   2                      //alarmCheck();
1087   2                      if(PB1==0)
1088   2                      {
1089   3                              SetAlarmhr++;
1090   3                              if(SetAlarmhr>23) SetAlarmhr=0; 
1091   3                              delay(9000);
1092   3                              alarmFlag=1;
1093   3                      }
1094   2                      
1095   2                      if(PB2==0)
1096   2                      {
1097   3                              SetAlarmmin++; 
1098   3                              if(SetAlarmmin>59)SetAlarmmin=0;
1099   3                              delay(9000);
1100   3                              alarmFlag=1;
1101   3                      }
1102   2                      if(PB3==0)
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 19  

1103   2                      {
1104   3                              if(SetAlarmmin<1)SetAlarmmin=60;
1105   3                              SetAlarmmin--;
1106   3                  delay(9000);
1107   3                              alarmFlag=1;    
1108   3                      }
1109   2                      
1110   2                      if(PB5==0)
1111   2                      {       delay(9000);
1112   3                              break;
1113   3                      }
1114   2                      LCD_Command(0x80);
1115   2                  LCD_Print_Line("SET ALARM");
1116   2                  LCD_Command(0xC0);
1117   2                  LCD_PrintAlarm();
1118   2              }
1119   1      }
1120          void opening ()
1121          {        char m=0;
1122   1      
1123   1         LCD_Command( 0x40 );
1124   1                      for(m=0;m<64;m++)  
1125   1                       {
1126   2                      LCD_Print(table[m]);
1127   2                      }
1128   1                      LCD_Command( 0x80 );    
1129   1                      for(m=0;m<4;m++)  
1130   1                      {
1131   2                        LCD_Print(m);
1132   2                      
1133   2                      }
1134   1              LCD_Command( 0xc0 );    
1135   1                      for(m=4;m<8;m++)  
1136   1                      {
1137   2                        LCD_Print(m);
1138   2                      
1139   2                      }
1140   1              delay(2000);
1141   1                      LCD_Command( 0x01 );
1142   1                              LCD_Command( 0x81 );    
1143   1                      for(m=0;m<4;m++)  
1144   1                      {
1145   2                        LCD_Print(m);
1146   2                      
1147   2                      }
1148   1              LCD_Command( 0xc1 );    
1149   1                      for(m=4;m<8;m++)  
1150   1                      {
1151   2                        LCD_Print(m);
1152   2                      
1153   2                      }
1154   1              delay(2000);
1155   1      
1156   1                      LCD_Command( 0x01 );
1157   1                              LCD_Command( 0x82 );    
1158   1                      for(m=0;m<4;m++)  
1159   1                      {
1160   2                        LCD_Print(m);
1161   2                      
1162   2                      }
1163   1              LCD_Command( 0xc2 );    
1164   1                      for(m=4;m<8;m++)  
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 20  

1165   1                      {
1166   2                        LCD_Print(m);
1167   2                      
1168   2                      }
1169   1              delay(2000);
1170   1                      LCD_Command( 0x01 );
1171   1                              LCD_Command( 0x83 );    
1172   1                      for(m=0;m<4;m++)  
1173   1                      {
1174   2                        LCD_Print(m);
1175   2                      
1176   2                      }
1177   1              LCD_Command( 0xc3 );    
1178   1                      for(m=4;m<8;m++)  
1179   1                      {
1180   2                        LCD_Print(m);
1181   2                      
1182   2                      }
1183   1              delay(2000);
1184   1                      LCD_Command( 0x01 );
1185   1                              LCD_Command( 0x84 );    
1186   1                      for(m=0;m<4;m++)  
1187   1                      {
1188   2                        LCD_Print(m);
1189   2                      
1190   2                      }
1191   1              LCD_Command( 0xc4 );    
1192   1                      for(m=4;m<8;m++)  
1193   1                      {
1194   2                        LCD_Print(m);
1195   2                      
1196   2                      }
1197   1              delay(2000);
1198   1                      LCD_Command( 0x01 );
1199   1                              LCD_Command( 0x85 );    
1200   1                      for(m=0;m<4;m++)  
1201   1                      {
1202   2                        LCD_Print(m);
1203   2                      
1204   2                      }
1205   1              LCD_Command( 0xc5 );    
1206   1                      for(m=4;m<8;m++)  
1207   1                      {
1208   2                        LCD_Print(m);
1209   2                      
1210   2                      }
1211   1              delay(2000);
1212   1                      LCD_Command( 0x01 );
1213   1                              LCD_Command( 0x86 );    
1214   1                      for(m=0;m<4;m++)  
1215   1                      {
1216   2                        LCD_Print(m);
1217   2                      
1218   2                      }
1219   1              LCD_Command( 0xc6 );    
1220   1                      for(m=4;m<8;m++)  
1221   1                      {
1222   2                        LCD_Print(m);
1223   2                      
1224   2                      }
1225   1              delay(2000);
1226   1                      LCD_Command( 0x01 );
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 21  

1227   1                              LCD_Command( 0x87 );    
1228   1                      for(m=0;m<4;m++)  
1229   1                      {
1230   2                        LCD_Print(m);
1231   2                      
1232   2                      }
1233   1              LCD_Command( 0xc7 );    
1234   1                      for(m=4;m<8;m++)  
1235   1                      {
1236   2                        LCD_Print(m);
1237   2                      
1238   2                      }
1239   1              delay(2000);
1240   1                      LCD_Command( 0x01 );
1241   1                              LCD_Command( 0x88 );    
1242   1                      for(m=0;m<4;m++)  
1243   1                      {
1244   2                        LCD_Print(m);
1245   2                      
1246   2                      }
1247   1              LCD_Command( 0xc8 );    
1248   1                      for(m=4;m<8;m++)  
1249   1                      {
1250   2                        LCD_Print(m);
1251   2                      
1252   2                      }
1253   1              delay(2000);
1254   1                      LCD_Command( 0x01 );
1255   1                              LCD_Command( 0x89 );    
1256   1                      for(m=0;m<4;m++)  
1257   1                      {
1258   2                        LCD_Print(m);
1259   2                      
1260   2                      }
1261   1              LCD_Command( 0xc9 );    
1262   1                      for(m=4;m<8;m++)  
1263   1                      {
1264   2                        LCD_Print(m);
1265   2                      
1266   2                      }
1267   1              delay(2000);
1268   1                      LCD_Command( 0x01 );
1269   1                              LCD_Command( 0x8a );    
1270   1                      for(m=0;m<4;m++)  
1271   1                      {
1272   2                        LCD_Print(m);
1273   2                      
1274   2                      }
1275   1              LCD_Command( 0xca );    
1276   1                      for(m=4;m<8;m++)  
1277   1                      {
1278   2                        LCD_Print(m);
1279   2                      
1280   2                      }
1281   1              delay(2000);
1282   1                      LCD_Command( 0x01 );
1283   1                              LCD_Command( 0x8b );    
1284   1                      for(m=0;m<4;m++)  
1285   1                      {
1286   2                        LCD_Print(m);
1287   2                      
1288   2                      }                                               
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 22  

1289   1              LCD_Command( 0xcb );    
1290   1                      for(m=4;m<8;m++)  
1291   1                      {
1292   2                        LCD_Print(m);
1293   2                      
1294   2                      }
1295   1              delay(2000);
1296   1      
1297   1      }
1298          void main()
1299          {  
1300   1              BZ= 0;  //Off Buzzer
1301   1              BL= 0;  //Off BL        
1302   1              E = 0;  
1303   1              LCD_init();     //initialize the LCD 
1304   1              LCD_Command( 0x01 );    // clear screen
1305   1              EA=1;
1306   1          ET0=1;
1307   1              ET1=1;
1308   1          TMOD = 0x11;
1309   1          TR0 = 1;
1310   1              TR1 = 0;
1311   1          opening ();  
1312   1              LCD_Command( 0x01 );    
1313   1              for(;;)
1314   1              {
1315   2                      alarmCheck();
1316   2                      LCD_Command(0x80);
1317   2                      LCD_Print_Line("B1 Date B2 SetA       ");
1318   2                      LCD_Command(0xc0);
1319   2                      LCD_Print_Line("B3 StopW B5 BL       ");
1320   2      
1321   2                      if(PB1==0)
1322   2                      {
1323   3                              bstopTime=1;
1324   3                      }
1325   2                      if((PB1==1)&&(bstopTime==1))
1326   2                      {
1327   3                              Time();
1328   3                              bstopTime=0;
1329   3                      }
1330   2      
1331   2                      if(PB2==0)                                                                                 
1332   2                      {
1333   3                              setAlarm();
1334   3                      }
1335   2      
1336   2                      while(PB3==0)
1337   2                      {
1338   3                              StopWatch();
1339   3                      }
1340   2                                      
1341   2                      if (PB5 == 0)
1342   2                      {
1343   3                              bstopBL=1;
1344   3                      }
1345   2                      if ((PB5 == 1)&&(bstopBL==1))
1346   2                      {
1347   3                              BackLight();
1348   3                              bstopBL =0;
1349   3                      }
1350   2      
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 23  

1351   2              }
1352   1      }
1353          
1354          
1355          
1356          
1357          
1358          
1359          char get_moon_day(uchar month_p,uint table_addr) 
1360          { 
1361   1      uchar temp; 
1362   1       switch (month_p) 
1363   1       { 
1364   2       case 1:{temp=year_code[table_addr]&0x08; 
1365   3        if (temp==0)return(0);else return(1);} 
1366   2       case 2:{temp=year_code[table_addr]&0x04; 
1367   3        if (temp==0)return(0);else return(1);} 
1368   2       case 3:{temp=year_code[table_addr]&0x02; 
1369   3        if (temp==0)return(0);else return(1);} 
1370   2       case 4:{temp=year_code[table_addr]&0x01; 
1371   3        if (temp==0)return(0);else return(1);} 
1372   2       case 5:{temp=year_code[table_addr+1]&0x80; 
1373   3        if (temp==0) return(0);else return(1);} 
1374   2       case 6:{temp=year_code[table_addr+1]&0x40; 
1375   3        if (temp==0)return(0);else return(1);} 
1376   2       case 7:{temp=year_code[table_addr+1]&0x20; 
1377   3        if (temp==0)return(0);else return(1);} 
1378   2       case 8:{temp=year_code[table_addr+1]&0x10; 
1379   3        if (temp==0)return(0);else return(1);} 
1380   2       case 9:{temp=year_code[table_addr+1]&0x08; 
1381   3        if (temp==0)return(0);else return(1);} 
1382   2       case 10:{temp=year_code[table_addr+1]&0x04; 
1383   3        if (temp==0)return(0);else return(1);} 
1384   2       case 11:{temp=year_code[table_addr+1]&0x02; 
1385   3        if (temp==0)return(0);else return(1);} 
1386   2       case 12:{temp=year_code[table_addr+1]&0x01; 
1387   3        if (temp==0)return(0);else return(1);} 
1388   2       case 13:{temp=year_code[table_addr+2]&0x80; 
1389   3        if (temp==0)return(0);else return(1);} 
1390   2       } 
1391   1      }
1392           
1393          void Conversion( unsigned char year,unsigned char month,unsigned char  day) 
1394          { 
1395   1       uchar temp1,temp2,temp3,month_p; 
1396   1       uint temp4,table_addr; 
1397   1       char flag2,flag_y; 
1398   1        table_addr=(year-15)*0x3;  
1399   1       temp1=year_code[table_addr+2]&0x60; 
1400   1       temp1=_cror_(temp1,5); 
1401   1       temp2=year_code[table_addr+2]&0x1f; 
1402   1       if(temp1==0x1) 
1403   1       { 
1404   2        temp3=temp2-1; 
1405   2       } 
1406   1       else 
1407   1       { 
1408   2        temp3=temp2+0x1f-1; 
1409   2       } 
1410   1       if (month<10) 
1411   1       { 
1412   2        temp4=day_code1[month-1]+day-1; 
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 24  

1413   2       } 
1414   1       else 
1415   1       { 
1416   2        temp4=day_code2[month-10]+day-1; 
1417   2       } 
1418   1       if ((month>0x2)&&(year%0x4==0)) 
1419   1       { 
1420   2        temp4+=1; 
1421   2       } 
1422   1       if (temp4>=temp3) 
1423   1       { 
1424   2       temp4-=temp3; 
1425   2       month=0x1; 
1426   2       month_p=0x1;
1427   2       flag2=get_moon_day(month_p,table_addr); 
1428   2       flag_y=0; 
1429   2       if(flag2==0)temp1=0x1d; 
1430   2       else temp1=0x1e; 
1431   2       temp2=year_code[table_addr]&0xf0; 
1432   2       temp2=_cror_(temp2,4);
1433   2       while(temp4>=temp1) 
1434   2       { 
1435   3       temp4-=temp1; 
1436   3       month_p+=1; 
1437   3       if(month==temp2) 
1438   3       { 
1439   4       flag_y=~flag_y; 
1440   4       if(flag_y==0) 
1441   4       month+=1; 
1442   4       } 
1443   3       else month+=1; 
1444   3       flag2=get_moon_day(month_p,table_addr); 
1445   3       if(flag2==0)temp1=0x1d; 
1446   3       else temp1=0x1e; 
1447   3       } 
1448   2       day=temp4+1; 
1449   2       } 
1450   1       else 
1451   1       { 
1452   2       temp3-=temp4; 
1453   2       year-=1; 
1454   2       table_addr-=0x3; 
1455   2       month=0xc; 
1456   2       temp2=year_code[table_addr]&0xf0; 
1457   2       temp2=_cror_(temp2,4); 
1458   2       if (temp2==0) 
1459   2       month_p=0xc; 
1460   2       else 
1461   2       month_p=0xd; 
1462   2       flag_y=0; 
1463   2       flag2=get_moon_day(month_p,table_addr); 
1464   2       if(flag2==0)temp1=0x1d; 
1465   2       else temp1=0x1e; 
1466   2       while(temp3>temp1) 
1467   2       { 
1468   3        temp3-=temp1; 
1469   3        month_p-=1; 
1470   3        if(flag_y==0)month-=1; 
1471   3        if(month==temp2)flag_y=~flag_y; 
1472   3        flag2=get_moon_day(month_p,table_addr); 
1473   3        if(flag2==0)temp1=0x1d; 
1474   3        else temp1=0x1e; 
C51 COMPILER V8.05a   XIONGCHENYU                                                          02/11/2015 05:29:53 PAGE 25  

1475   3       } 
1476   2       day=temp1-temp3+1; 
1477   2       } 
1478   1       c_moon=1; 
1479   1       year_moon=year; 
1480   1      month_moon=month; 
1481   1      day_moon=day;   
1482   1      }                                                          
1483          
1484           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5777    ----
   CONSTANT SIZE    =    619    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    110      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
